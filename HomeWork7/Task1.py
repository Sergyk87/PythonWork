# Задача 34:  
# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает, 
# Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. 
# Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами. 
# Стихотворение  Винни-Пух вбивает в программу с клавиатуры. В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке

# *Пример:*

# **Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да    
#     **Вывод:** Парам пам-пам  


poems = list(input('стих Винни:  ').lower().split())      #принимаем текст, преобразуем в список с переводом в нижний регистр с разделением пробелом
print(poems)                                              #печатаем список
glas = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я'] #список гласных

count_glas = list()                                       #создаем новый список для подсчета гласных в каждой фразе
for fraza in poems:                                       #проходим по фразам стиха
    x = len(list(filter(lambda i: i in glas, fraza)))     #проверяем есть ли буквы из фразы в списке гласных и считаем их кол-во
    count_glas.append(x)                                  #добавляем кол-во гласных в новый список                           
print(count_glas)                                         #выводим на печать список с кол-вом гласных в каждой фразе

count_glas1 = set(count_glas)                             #переводим список кол-ва гласных во множество, т.к. в нем только уникальные значения
print(len(count_glas1))                                   #печатаем множество(для проверки себя)
if len(count_glas1) == 1:                                 #если во множестве остался один элемент, значит кол-во гласных в каждой фразе одинаково
    print('Парам пам-пам')
else:
    print('Пам парам')

